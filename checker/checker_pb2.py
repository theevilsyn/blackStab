# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: checker.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='checker.proto',
  package='checker',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\rchecker.proto\x12\x07\x63hecker\"\'\n\x0b\x46lagRequest\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\r\"F\n\x0cServiceState\x12&\n\x06status\x18\x01 \x01(\x0e\x32\x16.checker.ServiceStatus\x12\x0e\n\x06reason\x18\x02 \x01(\t\"Q\n\x0c\x46lagResponse\x12$\n\x05state\x18\x01 \x01(\x0b\x32\x15.checker.ServiceState\x12\x0c\n\x04\x66lag\x18\x02 \x01(\t\x12\r\n\x05token\x18\x03 \x01(\t\"E\n\x0c\x43heckRequest\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\r\x12\x0c\n\x04\x66lag\x18\x03 \x01(\t\x12\r\n\x05token\x18\x04 \x01(\t*:\n\rServiceStatus\x12\x06\n\x02UP\x10\x00\x12\x08\n\x04\x44OWN\x10\x01\x12\n\n\x06MUMBLE\x10\x02\x12\x0b\n\x07\x43ORRUPT\x10\x03\x32\x81\x01\n\x07\x43hecker\x12\x38\n\tPlantFlag\x12\x14.checker.FlagRequest\x1a\x15.checker.FlagResponse\x12<\n\x0c\x43heckService\x12\x15.checker.CheckRequest\x1a\x15.checker.ServiceStateb\x06proto3'
)

_SERVICESTATUS = _descriptor.EnumDescriptor(
  name='ServiceStatus',
  full_name='checker.ServiceStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOWN', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MUMBLE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CORRUPT', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=293,
  serialized_end=351,
)
_sym_db.RegisterEnumDescriptor(_SERVICESTATUS)

ServiceStatus = enum_type_wrapper.EnumTypeWrapper(_SERVICESTATUS)
UP = 0
DOWN = 1
MUMBLE = 2
CORRUPT = 3



_FLAGREQUEST = _descriptor.Descriptor(
  name='FlagRequest',
  full_name='checker.FlagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='checker.FlagRequest.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='checker.FlagRequest.port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=65,
)


_SERVICESTATE = _descriptor.Descriptor(
  name='ServiceState',
  full_name='checker.ServiceState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='checker.ServiceState.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reason', full_name='checker.ServiceState.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=137,
)


_FLAGRESPONSE = _descriptor.Descriptor(
  name='FlagResponse',
  full_name='checker.FlagResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='checker.FlagResponse.state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flag', full_name='checker.FlagResponse.flag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='checker.FlagResponse.token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=139,
  serialized_end=220,
)


_CHECKREQUEST = _descriptor.Descriptor(
  name='CheckRequest',
  full_name='checker.CheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='checker.CheckRequest.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='checker.CheckRequest.port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flag', full_name='checker.CheckRequest.flag', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='checker.CheckRequest.token', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=222,
  serialized_end=291,
)

_SERVICESTATE.fields_by_name['status'].enum_type = _SERVICESTATUS
_FLAGRESPONSE.fields_by_name['state'].message_type = _SERVICESTATE
DESCRIPTOR.message_types_by_name['FlagRequest'] = _FLAGREQUEST
DESCRIPTOR.message_types_by_name['ServiceState'] = _SERVICESTATE
DESCRIPTOR.message_types_by_name['FlagResponse'] = _FLAGRESPONSE
DESCRIPTOR.message_types_by_name['CheckRequest'] = _CHECKREQUEST
DESCRIPTOR.enum_types_by_name['ServiceStatus'] = _SERVICESTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FlagRequest = _reflection.GeneratedProtocolMessageType('FlagRequest', (_message.Message,), {
  'DESCRIPTOR' : _FLAGREQUEST,
  '__module__' : 'checker_pb2'
  # @@protoc_insertion_point(class_scope:checker.FlagRequest)
  })
_sym_db.RegisterMessage(FlagRequest)

ServiceState = _reflection.GeneratedProtocolMessageType('ServiceState', (_message.Message,), {
  'DESCRIPTOR' : _SERVICESTATE,
  '__module__' : 'checker_pb2'
  # @@protoc_insertion_point(class_scope:checker.ServiceState)
  })
_sym_db.RegisterMessage(ServiceState)

FlagResponse = _reflection.GeneratedProtocolMessageType('FlagResponse', (_message.Message,), {
  'DESCRIPTOR' : _FLAGRESPONSE,
  '__module__' : 'checker_pb2'
  # @@protoc_insertion_point(class_scope:checker.FlagResponse)
  })
_sym_db.RegisterMessage(FlagResponse)

CheckRequest = _reflection.GeneratedProtocolMessageType('CheckRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHECKREQUEST,
  '__module__' : 'checker_pb2'
  # @@protoc_insertion_point(class_scope:checker.CheckRequest)
  })
_sym_db.RegisterMessage(CheckRequest)



_CHECKER = _descriptor.ServiceDescriptor(
  name='Checker',
  full_name='checker.Checker',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=354,
  serialized_end=483,
  methods=[
  _descriptor.MethodDescriptor(
    name='PlantFlag',
    full_name='checker.Checker.PlantFlag',
    index=0,
    containing_service=None,
    input_type=_FLAGREQUEST,
    output_type=_FLAGRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckService',
    full_name='checker.Checker.CheckService',
    index=1,
    containing_service=None,
    input_type=_CHECKREQUEST,
    output_type=_SERVICESTATE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CHECKER)

DESCRIPTOR.services_by_name['Checker'] = _CHECKER

# @@protoc_insertion_point(module_scope)
